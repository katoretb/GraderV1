name: FRONTEND
 
on:
  push:
    branches: [latest, testing]
    paths: [frontend/src/**]
    tags: [ v* ]
 
env:
  # Use docker.io for Docker Hub (Default) / Use ghcr.io for GitHub Container Registry
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
 
jobs:
  docker:
    # Will run on latest and testing only
    if: (github.ref_name == 'latest' || github.ref_name == 'testing') && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v3
      
      # - 
      #   name: Create .env file
      #   if: github.ref_name == 'latest'
      #   run: echo "${{ secrets.PROD_FRONT_VAR }}" > ./frontend/src/.env
      # - 
      #   name: Create .env file
      #   if: github.ref_name == 'testing'
      #   run: echo "${{ secrets.TEST_FRONT_VAR }}" > ./frontend/src/.env
      -
        name: Make ENVFILE (LATEST)
        if: github.ref_name == 'latest'
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_PORT: ${{ secrets.PROD_PORT_FRONT }}
          envkey_REACT_APP_HOST: ${{ secrets.PROD_API }}
          envkey_REACT_APP_DEV: ${{ secrets.PROD_DEV }}
          file_name: .env
          directory: ./frontend/src/
      -
        name: Make ENVFILE (TESTING)
        if: github.ref_name == 'testing'
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_PORT: ${{ secrets.TEST_PORT_FRONT }}
          envkey_REACT_APP_HOST: ${{ secrets.TEST_API }}
          envkey_REACT_APP_DEV: ${{ secrets.TEST_DEV }}
          file_name: .env
          directory: ./frontend/src/
      -
        name: Edit nginx.conf (DEVELOPMENT)
        if: github.ref_name == 'testing'
        run: |
          sed -i 's/sci.cugrader.com/devcugrader.duckdns.org/g' ./frontend/nginx.conf
      -
        name: Validate nginx.conf (DEVELOPMENT)
        if: github.ref_name == 'testing'
        run: |
          if grep -q "devcugrader.duckdns.org" ./frontend/nginx.conf && ! grep -q "sci.cugrader.com" ./frontend/nginx.conf; then
            echo "nginx.conf development validation passed"
          else
            echo "nginx.conf development validation failed" && exit 1
          fi
      -
        name: Log nginx.conf (CRITICAL)
        run: |
          echo "nginx.conf:"
          cat ./frontend/nginx.conf
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            prefix=frontend-,onlatest=true
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
      -
        name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and Push Docker Image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: "./frontend"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
